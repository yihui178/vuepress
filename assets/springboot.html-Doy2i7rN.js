import{_ as l,c as p,b as e,a,d as n,e as t,r as o,o as r}from"./app-Dbnb5pkR.js";const c="/vuepress/assets/image-20250923093336761-Bh78HLfR.png",d="/vuepress/assets/image-20250923093515534-ChPEQxcb.png",g="/vuepress/assets/image-20250923093547425-BjhwzX27.png",m="/vuepress/assets/image-20250923093610404-CjeJ3nAI.png",u="/vuepress/assets/image-20250923093650378-B6TxtJiR.png",v="/vuepress/assets/image-20250923094038933-S-DaszSO.png",h="/vuepress/assets/image-20250923094055927-BBlIIrFt.png",k="/vuepress/assets/image-20250923094124333-BixGNABT.png",b="/vuepress/assets/image-20250923094258595-BNQKGRUO.png",_="/vuepress/assets/image-20250923094315289-zf1T1Ba3.png",y="/vuepress/assets/image-20250923094342772-CyP8r2kR.png",x="/vuepress/assets/image-20250923102151452-_vUjET-j.png",S="/vuepress/assets/image-20250923110438847-CFfNG8U8.png",D="/vuepress/assets/image-20250923110811722-BWrISJBk.png",f="/vuepress/assets/image-20250923110736216-DLtTtxvr.png",q="/vuepress/assets/image-20250923144607970-CjOQaM0A.png",M="/vuepress/assets/image-20250923143409669-B_DnR5x0.png",j="/vuepress/assets/image-20250915153549441-nNDe-DTA.png",A="/vuepress/assets/image-20250915153625737-BeqksfAf.png",B="/vuepress/assets/image-20250915155048943-lyP_Dp-A.png",I="/vuepress/assets/image-20250915161728008-D2JZCCjC.png",C="/vuepress/assets/image-20250915162038836-DN9a8gp4.png",w="/vuepress/assets/image-20250923150926839-CPZuCq_6.png",E="/vuepress/assets/image-20250923151140014-CG53noLk.png",J="/vuepress/assets/image-20250923151325922-CHgvpCa3.png",P="/vuepress/assets/image-20250923151649568-DAuVr1yZ.png",L="/vuepress/assets/image-20250923111654465-CSfIenuC.png",T="/vuepress/assets/image-20250923112006676-BC4UUph3.png",z="/vuepress/assets/image-20250923140153156-CZ6KLO6t.png",Q="/vuepress/assets/image-20250923140602877-C6BIv5nq.png",O={},R={href:"https://www.java.com/",target:"_blank",rel:"noopener noreferrer"},H={href:"https://start.spring.io/",target:"_blank",rel:"noopener noreferrer"},W={href:"http://localhost:8080/",target:"_blank",rel:"noopener noreferrer"};function N(G,s){const i=o("ExternalLinkIcon");return r(),p("div",null,[s[10]||(s[10]=e('<h1 id="按步骤完成一个-spring-boot-项目搭建开发环境" tabindex="-1"><a class="header-anchor" href="#按步骤完成一个-spring-boot-项目搭建开发环境"><span>按步骤完成一个 spring boot 项目搭建开发环境</span></a></h1><h2 id="一、-java开发工具取决于自己的使用习惯-自己选择-各有各的好处。-直接安装即可。" tabindex="-1"><a class="header-anchor" href="#一、-java开发工具取决于自己的使用习惯-自己选择-各有各的好处。-直接安装即可。"><span>一、 Java开发工具取决于自己的使用习惯，自己选择，各有各的好处。 直接安装即可。</span></a></h2><h3 id="_1、idea-下载与安装" tabindex="-1"><a class="header-anchor" href="#_1、idea-下载与安装"><span>1、IDEA 下载与安装</span></a></h3><p>进入 jetbrains 官网https://www.jetbrains.com/，按下图依次操作。</p><p><img src="'+c+'" alt="image-20250923093336761"></p><p><img src="'+d+'" alt="image-20250923093515534"></p><p><img src="'+g+'" alt="image-20250923093547425"></p><p>上述步骤下载的是最新的 Ultimate 版 IDEA，如果想要下载其他 Ultimate 版，则需按下图依次操作。</p><p><img src="'+m+'" alt="image-20250923093610404"></p><p><img src="'+u+'" alt="image-20250923093650378"></p><p>双击下载好的 IDEA 安装包，进入安装向导，如下图所示，点击下一步。</p><p><img src="'+v+'" alt="image-20250923094038933"></p><p>更改安装路径，按下图依次操作，建议路径名不要有中文/空格。 也可以使用默认路径，直接点击下一步。</p><p><img src="'+h+'" alt="image-20250923094055927"></p><p><img src="'+k+'" alt="image-20250923094124333"></p><p>按下图依次操作，完成 IDEA 的安装。</p><p><img src="'+b+'" alt="image-20250923094258595"></p><p><img src="'+_+'" alt="image-20250923094315289"></p><p><img src="'+y+'" alt="image-20250923094342772"></p><p>原文链接：https://blog.csdn.net/weixin_46485638/article/details/134891162</p><h2 id="二、安装-spring-boot-3-5-前" tabindex="-1"><a class="header-anchor" href="#二、安装-spring-boot-3-5-前"><span>二、安装 spring boot 3.5 前</span></a></h2><p><strong>🔍 前提条件:</strong></p><p>Java SDK 版本至少要 <strong>17 或更高版本</strong>。Spring Boot 3.x 要求如此。</p><p>有 IDE 或者构建工具（Maven / Gradle）准备好。</p><h3 id="_1、java-sdk-v17" tabindex="-1"><a class="header-anchor" href="#_1、java-sdk-v17"><span>1、<strong>Java SDK v17+</strong></span></a></h3>',25)),a("p",null,[s[1]||(s[1]=n("Spring Boot 可以与“经典”Java 开发工具一起使用，也可以作为命令行工具安装。 无论哪种方式，您都需要 ",-1)),a("a",R,[s[0]||(s[0]=n("Java SDK v17",-1)),t(i)]),s[2]||(s[2]=n(" 或更高版本。 在开始之前，您应该使用以下命令检查当前的 Java 安装：",-1))]),s[11]||(s[11]=e(`<div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh" data-title="sh"><pre><code><span class="line">$ <span class="token function">java</span> <span class="token parameter variable">-version</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p><img src="`+x+'" alt="image-20250923102151452"></p><h3 id="_2、maven-安装" tabindex="-1"><a class="header-anchor" href="#_2、maven-安装"><span><strong>2、Maven 安装</strong></span></a></h3><h4 id="_1-下载-maven" tabindex="-1"><a class="header-anchor" href="#_1-下载-maven"><span><strong>1.下载 Maven</strong></span></a></h4><p>Spring Boot 与 Apache Maven 3.6.3 或更高版本兼容。 如果您尚未安装 Maven，可以访问 Maven 官方网站并下载适合你操作系统的版本：</p><ul><li>Maven 官网：https://maven.apache.org/download.cgi</li></ul><p>选择 <strong>Binary zip archive</strong> 或 <strong>Binary tar.gz archive</strong>（具体取决于你的操作系统）。如果你是 Windows 用户，可以选择 <code>.zip</code> 格式。</p><h4 id="_2-解压文件" tabindex="-1"><a class="header-anchor" href="#_2-解压文件"><span><strong>2.解压文件</strong></span></a></h4><p>将下载的压缩包解压到一个目录。你可以选择任何你喜欢的目录，但一般推荐解压到类似 <code>C:\\Program Files\\</code> 或者 <code>C:\\maven</code>等路径。</p><ul><li><strong>Windows</strong> 示例： 将 <code>apache-maven-3.x.x-bin.zip</code> 解压到 <code>C:\\Program Files\\Apache\\Maven\\</code> 或其他目录。</li></ul><h4 id="_3-设置环境变量" tabindex="-1"><a class="header-anchor" href="#_3-设置环境变量"><span><strong>3.设置环境变量</strong></span></a></h4><p>设置环境变量可以让你在命令行中全局使用 Maven。</p><ol><li><strong>打开“环境变量”设置</strong><ul><li>右键点击“此电脑” -&gt; 选择“属性” -&gt; “高级系统设置” -&gt; “环境变量”。</li></ul></li><li><strong>添加 <code>MAVEN_HOME</code> 变量</strong><ul><li>点击“系统变量”中的“新建”按钮。</li><li>设置变量名为 <code>MAVEN_HOME</code>，变量值为 Maven 解压目录（例如 <code>C:\\Program Files\\Apache\\Maven</code>）。</li></ul></li><li><strong>更新 <code>PATH</code> 变量</strong><ul><li>在“系统变量”中找到 <code>Path</code> 变量，点击“编辑”。</li><li>点击“新建”，然后添加 Maven 的 <code>bin</code> 目录（例如 <code>C:\\Program Files\\Apache\\Maven\\bin</code>）。</li></ul></li></ol><p><img src="'+S+'" alt="image-20250923110438847"></p><p><img src="'+D+`" alt="image-20250923110811722"></p><h4 id="_4-验证-maven-安装" tabindex="-1"><a class="header-anchor" href="#_4-验证-maven-安装"><span><strong>4.验证 Maven 安装</strong></span></a></h4><p>打开命令行（Windows 使用 <code>cmd</code> 或 PowerShell，Linux/macOS 使用终端），输入以下命令：</p><div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh" data-title="sh"><pre><code><span class="line">mvn <span class="token parameter variable">-v</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>如果安装成功，你会看到类似如下的信息：</p><div class="language-yaml line-numbers-mode" data-highlighter="prismjs" data-ext="yml" data-title="yml"><pre><code><span class="line">Apache Maven 3.x.x (Some Version)</span>
<span class="line"><span class="token key atrule">Maven home</span><span class="token punctuation">:</span> C<span class="token punctuation">:</span>\\Program Files\\Apache\\Maven</span>
<span class="line"><span class="token key atrule">Java version</span><span class="token punctuation">:</span> 1.x.x<span class="token punctuation">,</span> <span class="token key atrule">vendor</span><span class="token punctuation">:</span> Oracle Corporation</span>
<span class="line"><span class="token key atrule">Java home</span><span class="token punctuation">:</span> C<span class="token punctuation">:</span>\\Program Files\\Java\\jdk<span class="token punctuation">-</span>x.x.x</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><img src="`+f+`" alt="image-20250923110736216"></p><p>这表示 Maven 已经成功安装。</p><h4 id="_5-配置idea中的maven" tabindex="-1"><a class="header-anchor" href="#_5-配置idea中的maven"><span><strong>5.配置Idea中的Maven</strong></span></a></h4><p>在 <code>settings.xml</code> 中配置国内镜像</p><p>在 <code>D:\\Apache\\Maven\\apache-maven-3.9.11\\conf\\settings.xml</code> 里添加：</p><div class="language-xml line-numbers-mode" data-highlighter="prismjs" data-ext="xml" data-title="xml"><pre><code><span class="line"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>mirrors</span><span class="token punctuation">&gt;</span></span></span>
<span class="line">  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>mirror</span><span class="token punctuation">&gt;</span></span></span>
<span class="line">    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>id</span><span class="token punctuation">&gt;</span></span>aliyunmaven<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>id</span><span class="token punctuation">&gt;</span></span></span>
<span class="line">    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>mirrorOf</span><span class="token punctuation">&gt;</span></span>central<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>mirrorOf</span><span class="token punctuation">&gt;</span></span></span>
<span class="line">    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>name</span><span class="token punctuation">&gt;</span></span>Aliyun Maven<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>name</span><span class="token punctuation">&gt;</span></span></span>
<span class="line">    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>url</span><span class="token punctuation">&gt;</span></span>https://maven.aliyun.com/repository/public<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>url</span><span class="token punctuation">&gt;</span></span></span>
<span class="line">  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>mirror</span><span class="token punctuation">&gt;</span></span></span>
<span class="line"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>mirrors</span><span class="token punctuation">&gt;</span></span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><img src="`+q+'" alt="image-20250923144607970"></p><hr><h4 id="_6-确认-idea-使用的-maven-配置" tabindex="-1"><a class="header-anchor" href="#_6-确认-idea-使用的-maven-配置"><span><strong>6.确认 IDEA 使用的 Maven 配置</strong></span></a></h4><ul><li><p>打开</p><p>File → Settings → Build, Execution, Deployment → Build Tools → Maven</p><ul><li><code>Maven home path</code> → 指向 <code>D:\\Apache\\Maven\\apache-maven-3.9.11</code></li><li><code>User settings file</code> → 指向你刚才改过的 <code>settings.xml</code></li><li><code>Local repository</code> → 确认指向 <code>C:\\Users\\yihui\\.m2\\repository</code></li></ul></li></ul><p>⚠️ 很多时候 IDEA 默认用的是它自带的 Maven，没有走你配置的镜像。</p><p><img src="'+M+`" alt="image-20250923143409669"></p><h3 id="_3、docker-desktop安装mysql" tabindex="-1"><a class="header-anchor" href="#_3、docker-desktop安装mysql"><span>3、Docker Desktop安装MySQL</span></a></h3><h4 id="_1-拉取mysql镜像" tabindex="-1"><a class="header-anchor" href="#_1-拉取mysql镜像"><span>1.拉取mysql镜像</span></a></h4><p>win+R打开windows命令行窗口，输入以下命令拉取mysql镜像</p><div class="language-docker line-numbers-mode" data-highlighter="prismjs" data-ext="docker" data-title="docker"><pre><code><span class="line"><span class="token comment">#默认拉去最新版本（mysql：+版本名 [拉取指定mysql版本]）</span></span>
<span class="line">docker pull mysql</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><p><img src="`+j+`" alt="image-20250915153549441"></p><p>这是mysql的配置文件和存储数据用的目录</p><h4 id="_2-启动并配置mysql" tabindex="-1"><a class="header-anchor" href="#_2-启动并配置mysql"><span>2.启动并配置mysql</span></a></h4><p>切换到终端，输入命令，第一次启动MySQL容器</p><div class="language-docker line-numbers-mode" data-highlighter="prismjs" data-ext="docker" data-title="docker"><pre><code><span class="line">docker run --name mysql -p 3306:3306 ^</span>
<span class="line">-e MYSQL_ROOT_PASSWORD=123456 ^</span>
<span class="line">-d mysql</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><img src="`+A+`" alt="image-20250915153625737"></p><p>命令解释:</p><p>run --name mysql</p><p>–name为容器指定名称为mysql</p><p>-p 3306:3306</p><p>指定端口映射，将主机端口3306映射到容器端口3306</p><p>-e MYSQL_ROOT_PASSWORD=123456</p><p>-e设置环境变量 ，设置root用户，密码123456</p><p>-d mysql:latest --default-authentication-plugin=mysql_native_password</p><p>-d后台运行，并返回容器ID ,mysql:latest 镜像名</p><h4 id="_3-创建mysql本地持久化目录" tabindex="-1"><a class="header-anchor" href="#_3-创建mysql本地持久化目录"><span>3.创建mysql本地持久化目录</span></a></h4><p>D盘创建目录docker/mysql/conf,docker/mysql/data</p><p>准备复制MySQL镜像中的配置文件到刚刚创建的本地持久化目录</p><p>D:/docker/mysql/conf/</p><p>打开docker桌面，点击Images镜像==》选择mysql镜像==》点击In use进入容器==》</p><p>点击name:mysql==》点击Files==》打开目录etc/my.cnf点击下载到目录D:/docker/mysql/conf/</p><p>关闭容器</p><p>终端执行命令</p><div class="language-docker line-numbers-mode" data-highlighter="prismjs" data-ext="docker" data-title="docker"><pre><code><span class="line">关闭容器</span>
<span class="line">docker stop mysql</span>
<span class="line"></span>
<span class="line">删除容器</span>
<span class="line">docker rm mysql</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><img src="`+B+`" alt="image-20250915155048943"></p><p>重新启动容器，执行命令</p><div class="language-docker line-numbers-mode" data-highlighter="prismjs" data-ext="docker" data-title="docker"><pre><code><span class="line">docker run --name mysql -p 3306:3306 ^</span>
<span class="line">  -v //d/HBBTJ/Docker/mysql/data:/var/lib/mysql ^</span>
<span class="line">  -v //d/HBBTJ/Docker/mysql/conf/my.cnf:/etc/mysql/my.cnf ^</span>
<span class="line">  -e MYSQL_ROOT_PASSWORD=123456 ^</span>
<span class="line">  -d mysql</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>-v //d/HBBTJ/Docker/mysql/data:/var/lib/mysql</p><p>映射主机目录d盘的/docker/mysql/data 到容器的/var/lib/mysql/目录</p><p><img src="`+I+`" alt="image-20250915161728008"></p><h4 id="_4-测试是否持久化" tabindex="-1"><a class="header-anchor" href="#_4-测试是否持久化"><span>4.测试是否持久化</span></a></h4><p>进入 MySQL 容器：</p><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">docker exec -it mysql mysql -uroot -p</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>新建数据库：</p><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">CREATE DATABASE testdb;</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>查看 <code>D:\\docker\\mysql\\data</code>，应该能看到 <code>testdb</code> 文件夹。</p><p><img src="`+C+'" alt="image-20250915162038836"></p><p>数据会存到 Docker 管理的 volume 里，用 <code>docker volume ls</code> 可以查看。</p><h4 id="_5-在idea中连接mysql" tabindex="-1"><a class="header-anchor" href="#_5-在idea中连接mysql"><span>5.在Idea中连接mysql</span></a></h4><p>在Docker中启动并登录mysql</p><p><img src="'+w+'" alt="image-20250923150926839"></p><p><strong>打开 Database 工具窗口</strong></p><ul><li><p>在 IDEA 右侧工具栏找到</p><p>Database（数据库）图标，如果没看到：<code>View → Tool Windows → Database</code> 打开。</p></li><li><p>新建 MySQL 数据源</p></li><li><p>在 Database 窗口里，点击左上角的 <strong>+</strong></p></li><li><p>选择 <strong>Data Source → MySQL</strong>（如果没有 MySQL，说明没装驱动，IDEA 会提示你下载）</p></li></ul><p><img src="'+E+'" alt="image-20250923151140014"></p><p><strong>填写数据库连接信息</strong></p><ul><li><strong>Host</strong>：数据库服务器 IP，例如 <code>localhost</code></li><li><strong>Port</strong>：MySQL 默认 <code>3306</code></li><li><strong>User</strong>：你的 MySQL 用户名，例如 <code>root</code></li><li><strong>Password</strong>：你的 MySQL 密码（可以勾选 Save）</li><li><strong>Database</strong>：要连接的数据库名（可以不填，先连上服务器再选）</li></ul><hr><p><strong>下载 MySQL JDBC 驱动</strong></p><ul><li><p>第一次用 MySQL，IDEA 会提示你下载驱动：</p></li><li><p>点击 <strong>Download Driver Files</strong>（自动下载）</p></li><li><p>如果下载不下来，可以手动下载 MySQL Connector/J，然后在这里手动选择 JAR</p></li></ul><p><img src="'+J+'" alt="image-20250923151325922"></p><p><strong>测试连接</strong></p><ul><li>点击右下角的 <strong>Test Connection</strong>，看到绿色 ✅ 说明连上了。</li></ul><p><img src="'+P+'" alt="image-20250923151649568"></p><h2 id="三、使用-spring-initializr-创建-spring-boot-3-5-项目" tabindex="-1"><a class="header-anchor" href="#三、使用-spring-initializr-创建-spring-boot-3-5-项目"><span>三、使用 Spring Initializr 创建 Spring Boot 3.5 项目</span></a></h2><h3 id="_1、打开-spring-initializr" tabindex="-1"><a class="header-anchor" href="#_1、打开-spring-initializr"><span>1、打开 Spring Initializr</span></a></h3>',91)),a("ul",null,[a("li",null,[a("p",null,[s[4]||(s[4]=n("在浏览器里输入 👉 ",-1)),a("a",H,[s[3]||(s[3]=n("https://start.spring.io",-1)),t(i)]),s[5]||(s[5]=n(" 这是 Spring 官方提供的项目生成器。在页面上你会看到很多选项：",-1))])]),s[6]||(s[6]=e("<li><p><strong>Project（构建工具）</strong></p><ul><li><code>Maven</code> 或 <code>Gradle</code></li><li>推荐选 <strong>Maven</strong>（更常见，也适合新手）。</li></ul></li><li><p><strong>Language（语言）</strong></p><ul><li><code>Java</code>（推荐）</li><li>也支持 Kotlin / Groovy，但 Java 最主流。</li></ul></li><li><p><strong>Spring Boot 版本</strong></p><ul><li>选择 <strong>3.5.x</strong>（比如 3.5.0、3.5.1，取决于最新发布的版本）。</li><li>⚠️ 注意：Spring Boot 3.x <strong>要求 Java 17 或更高版本</strong>。</li></ul></li><li><p><strong>Project Metadata（元信息）</strong></p><ul><li><strong>Group</strong>：通常是你的组织名或包名前缀，例如：<code>com.example</code></li><li><strong>Artifact</strong>：项目名（生成的 jar 名），例如：<code>demo</code></li><li><strong>Name</strong>：项目名称，例如：<code>demo</code></li><li><strong>Package Name</strong>：默认会根据 Group + Artifact 生成，例如：<code>com.example.demo</code></li><li><strong>Packaging</strong>：选 <code>Jar</code>（大多数 Web 项目都用 Jar）。</li><li><strong>Java</strong>：选择 <strong>17 或以上版本</strong>。</li></ul></li>",4))]),s[12]||(s[12]=e('<h3 id="_2、添加依赖" tabindex="-1"><a class="header-anchor" href="#_2、添加依赖"><span>2、添加依赖</span></a></h3><p>点击 <strong>“Add Dependencies”</strong>，搜索并添加你需要的依赖，例如：</p><ul><li><strong>Spring Web</strong>：构建 REST API 或 Web 应用。</li><li><strong>Spring Boot DevTools</strong>：热部署（开发时更方便）。</li><li><strong>Spring Data JPA</strong>：如果你要用数据库。</li><li><strong>MySQL Driver</strong> 或 <strong>PostgreSQL Driver</strong>：连接数据库。</li></ul><p>作为 Hello World 示例，先只添加 <strong>Spring Web</strong> 就行。</p><p><img src="'+L+'" alt="image-20250923111654465"></p><hr><h3 id="_3、生成项目-导入到-ide" tabindex="-1"><a class="header-anchor" href="#_3、生成项目-导入到-ide"><span>3、生成项目，导入到 IDE</span></a></h3><ul><li><p>点击 <strong>“Generate”</strong> 按钮。</p></li><li><p>它会下载一个 <code>.zip</code> 文件，比如：<code>demo.zip</code>。</p></li><li><p>解压 <code>demo.zip</code>。</p></li><li><p>打开你的 IDE（IntelliJ IDEA / Eclipse / VSCode）。</p></li><li><p>选择 <strong>Open Project</strong> 或 <strong>Import Project</strong>，选中解压后的目录。</p></li><li><p>IDE 会自动识别这是一个 Spring Boot 项目，并下载依赖（第一次可能要等一会儿）。</p></li></ul><p><img src="'+T+`" alt="image-20250923112006676"></p><h3 id="_4、启动项目" tabindex="-1"><a class="header-anchor" href="#_4、启动项目"><span>4、启动项目</span></a></h3><p>在 IDE 里找到 <code>DemoApplication.java</code>（通常在 <code>src/main/java/com/example/demo/</code> 下），点击运行（或者用命令行）：</p><div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh" data-title="sh"><pre><code><span class="line">mvn spring-boot:run</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p><img src="`+z+`" alt="image-20250923140153156"></p><h3 id="_5、测试-hello-world" tabindex="-1"><a class="header-anchor" href="#_5、测试-hello-world"><span>5、测试 Hello World</span></a></h3><p>在 <code>src/main/java/com/example/demo/</code> 下，新建一个类 <code>HelloController.java</code>：</p><div class="language-java line-numbers-mode" data-highlighter="prismjs" data-ext="java" data-title="java"><pre><code><span class="line"><span class="token keyword">package</span> <span class="token namespace">com<span class="token punctuation">.</span>example<span class="token punctuation">.</span>demo</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line"><span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>web<span class="token punctuation">.</span>bind<span class="token punctuation">.</span>annotation<span class="token punctuation">.</span></span><span class="token class-name">GetMapping</span></span><span class="token punctuation">;</span></span>
<span class="line"><span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>web<span class="token punctuation">.</span>bind<span class="token punctuation">.</span>annotation<span class="token punctuation">.</span></span><span class="token class-name">RestController</span></span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line"><span class="token annotation punctuation">@RestController</span></span>
<span class="line"><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">HelloController</span> <span class="token punctuation">{</span></span>
<span class="line"></span>
<span class="line">    <span class="token annotation punctuation">@GetMapping</span><span class="token punctuation">(</span><span class="token string">&quot;/&quot;</span><span class="token punctuation">)</span></span>
<span class="line">    <span class="token keyword">public</span> <span class="token class-name">String</span> <span class="token function">hello</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">        <span class="token keyword">return</span> <span class="token string">&quot;Hello, Spring Boot 3.5!&quot;</span><span class="token punctuation">;</span></span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_6、在浏览器里访问" tabindex="-1"><a class="header-anchor" href="#_6、在浏览器里访问"><span>6、在浏览器里访问</span></a></h3>`,17)),a("p",null,[s[8]||(s[8]=n("然后重新启动项目，启动成功后，在浏览器里访问：👉 ",-1)),a("a",W,[s[7]||(s[7]=n("http://localhost:8080",-1)),t(i)]),s[9]||(s[9]=n("你会看到输出：",-1))]),s[13]||(s[13]=e(`<div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">Hello, Spring Boot 3.5!</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><hr><p><img src="`+Q+'" alt="image-20250923140602877"></p><p>到这里，你就已经成功用 <strong>Spring Boot 3.5</strong> 创建并运行了一个 Web 项目。</p>',4))])}const U=l(O,[["render",N]]),V=JSON.parse('{"path":"/blogs/test/springboot/springboot.html","title":"Spring boot项目搭建","lang":"en-US","frontmatter":{"title":"Spring boot项目搭建","date":"2025/09/23","tags":["Springboot","Java","Maven","Mysql"],"categories":["练习","项目实战"]},"headers":[{"level":2,"title":"一、 Java开发工具取决于自己的使用习惯，自己选择，各有各的好处。 直接安装即可。","slug":"一、-java开发工具取决于自己的使用习惯-自己选择-各有各的好处。-直接安装即可。","link":"#一、-java开发工具取决于自己的使用习惯-自己选择-各有各的好处。-直接安装即可。","children":[{"level":3,"title":"1、IDEA 下载与安装","slug":"_1、idea-下载与安装","link":"#_1、idea-下载与安装","children":[]}]},{"level":2,"title":"二、安装 spring boot 3.5 前","slug":"二、安装-spring-boot-3-5-前","link":"#二、安装-spring-boot-3-5-前","children":[{"level":3,"title":"1、Java SDK v17+","slug":"_1、java-sdk-v17","link":"#_1、java-sdk-v17","children":[]},{"level":3,"title":"2、Maven 安装","slug":"_2、maven-安装","link":"#_2、maven-安装","children":[]},{"level":3,"title":"3、Docker Desktop安装MySQL","slug":"_3、docker-desktop安装mysql","link":"#_3、docker-desktop安装mysql","children":[]}]},{"level":2,"title":"三、使用 Spring Initializr 创建 Spring Boot 3.5 项目","slug":"三、使用-spring-initializr-创建-spring-boot-3-5-项目","link":"#三、使用-spring-initializr-创建-spring-boot-3-5-项目","children":[{"level":3,"title":"1、打开 Spring Initializr","slug":"_1、打开-spring-initializr","link":"#_1、打开-spring-initializr","children":[]},{"level":3,"title":"2、添加依赖","slug":"_2、添加依赖","link":"#_2、添加依赖","children":[]},{"level":3,"title":"3、生成项目，导入到 IDE","slug":"_3、生成项目-导入到-ide","link":"#_3、生成项目-导入到-ide","children":[]},{"level":3,"title":"4、启动项目","slug":"_4、启动项目","link":"#_4、启动项目","children":[]},{"level":3,"title":"5、测试 Hello World","slug":"_5、测试-hello-world","link":"#_5、测试-hello-world","children":[]},{"level":3,"title":"6、在浏览器里访问","slug":"_6、在浏览器里访问","link":"#_6、在浏览器里访问","children":[]}]}],"git":{"createdTime":1759215115000,"updatedTime":1759215115000,"contributors":[{"name":"Yin Jin Peng","email":"18332585277@163.com","commits":1}]},"filePathRelative":"blogs/test/springboot/springboot.md"}');export{U as comp,V as data};
